
services:
  api:
    build:
      dockerfile: Dockerfile
      context: .
      target: build
    env_file:
      - .env
    volumes:
      - myapp:/usr/src/app
      - myapp:/usr/src/app/node_modules
    # command: npm run start:prod
    ports:
      - 3333:3333
    depends_on:
      - dev-db
      - dev-redis
  dev-db:
    image: postgres:13
    ports:
      - 5434:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: projects-portfolio
    # networks:
      # - projectsportfolio
    volumes:
      - docker-nest-postgres:/var/lib/postgresql/data
  dev-redis:
    image: redis:7-alpine
    container_name: projectsportfolio-dev-redis
    hostname: projectsportfolio-dev-redis
    environment:
      - REDIS_PASSWORD=password
    # networks:
      # - projectsportfolio
    command: /bin/sh -c 'redis-server --appendonly yes --requirepass $${REDIS_PASSWORD}'
    restart: always
    volumes:
      - redis:/data
    ports:
      - 6379:6379
  api-test:
    build:
      dockerfile: Dockerfile
      context: .
      target: development
    env_file:
      - .env.test
    volumes:
      - .:/usr/src/app
      - ./usr/src/app/node_modules
    command: npm run test:e2e
    ports:
      - 3333:3333
    depends_on:
      - test-db
      - test-redis
  test-db:
    image: postgres:13
    ports:
      - 5435:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: projects-portfolio
    # networks:
    #   - projectsportfolio
    volumes:
      - docker-nest-postgres:/var/lib/postgresql/data
  test-redis:
    image: redis:7-alpine
    container_name: projectsportfolio-test-redis
    hostname: projectsportfolio-test-redis
    environment:
      - REDIS_PASSWORD=password
    # networks:
    #   - projectsportfolio
    command: /bin/sh -c 'redis-server --appendonly yes --requirepass $${REDIS_PASSWORD}'
    restart: always
    volumes:
      - redis:/data
    ports:
      - 6380:6379
# networks:
      # projectsportfolio:
volumes:
  myapp:
  docker-nest-postgres:
  redis:
    driver: local